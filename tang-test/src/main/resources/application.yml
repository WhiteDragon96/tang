server:
  port: 6699
spring:
  redis:
    host: 127.0.0.1
    port: 6379
    database: 14
    connect-timeout: 10000
  #配置rabbitMq 服务器
  rabbitmq:
    host: 119.91.204.244
    port: 5672
    username: guest
    password: guest
    #虚拟host 可以不设置,使用server默认host
#    virtual-host: JCcccHost
  kafka:
    bootstrap-servers: 119.91.204.244:9092
    producer: # producer 生产者
      retries: 0 # 重试次数
      acks: 1 # 应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
      batch-size: 16384 # 批量大小
      buffer-memory: 33554432 # 生产端缓冲区大小
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #      value-serializer: com.itheima.demo.config.MySerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer: # consumer消费者
      group-id: javagroup # 默认的消费组ID
      enable-auto-commit: true # 是否自动提交offset
      auto-commit-interval: 100  # 提交offset延时(接收到消息后多久提交offset)
      # earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      # latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
      # none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #      value-deserializer: com.itheima.demo.config.MyDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#redis 集群环境配置
#    cluster:
#      nodes: 172.18.64.27:6379,172.18.64.27:7002,172.18.64.27:7003
#      max-redirects: 3
#      lettuce:
#        pool:
#          max-idle: 16
#          max-active: 32
#          min-idle: 8
#    commandTimeout: 5000

#mybatis-plus配置
mybatis-plus:
  mapper-locations: classpath:com/neusense/**/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.neusense.**.entity

yunshangxue:
  elasticsearch:
    hostlist: ${eshostlist:127.0.0.1:9200}